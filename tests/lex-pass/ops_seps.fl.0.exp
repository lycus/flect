Flect.Compiler.Syntax.Token[type: :plus, value: "+", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 1, column: 1]]
Flect.Compiler.Syntax.Token[type: :minus, value: "-", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 2, column: 1]]
Flect.Compiler.Syntax.Token[type: :minus_angle_close, value: "->", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 3, column: 1]]
Flect.Compiler.Syntax.Token[type: :star, value: "*", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 4, column: 1]]
Flect.Compiler.Syntax.Token[type: :slash, value: "/", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 5, column: 1]]
Flect.Compiler.Syntax.Token[type: :percent, value: "%", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 6, column: 1]]
Flect.Compiler.Syntax.Token[type: :ampersand, value: "&", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 7, column: 1]]
Flect.Compiler.Syntax.Token[type: :ampersand_ampersand, value: "&&", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 8, column: 1]]
Flect.Compiler.Syntax.Token[type: :pipe, value: "|", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 9, column: 1]]
Flect.Compiler.Syntax.Token[type: :pipe_pipe, value: "||", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 10, column: 1]]
Flect.Compiler.Syntax.Token[type: :pipe_angle_close, value: "|>", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 11, column: 1]]
Flect.Compiler.Syntax.Token[type: :caret, value: "^", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 12, column: 1]]
Flect.Compiler.Syntax.Token[type: :tilde, value: "~", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 13, column: 1]]
Flect.Compiler.Syntax.Token[type: :exclamation, value: "!", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 14, column: 1]]
Flect.Compiler.Syntax.Token[type: :exclamation_assign, value: "!=", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 15, column: 1]]
Flect.Compiler.Syntax.Token[type: :exclamation_assign_assign, value: "!==", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 16, column: 1]]
Flect.Compiler.Syntax.Token[type: :paren_open, value: "(", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 17, column: 1]]
Flect.Compiler.Syntax.Token[type: :paren_close, value: ")", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 18, column: 1]]
Flect.Compiler.Syntax.Token[type: :brace_open, value: "{", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 19, column: 1]]
Flect.Compiler.Syntax.Token[type: :brace_close, value: "}", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 20, column: 1]]
Flect.Compiler.Syntax.Token[type: :bracket_open, value: "[", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 21, column: 1]]
Flect.Compiler.Syntax.Token[type: :bracket_close, value: "]", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 22, column: 1]]
Flect.Compiler.Syntax.Token[type: :comma, value: ",", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 23, column: 1]]
Flect.Compiler.Syntax.Token[type: :period, value: ".", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 24, column: 1]]
Flect.Compiler.Syntax.Token[type: :at, value: "@", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 25, column: 1]]
Flect.Compiler.Syntax.Token[type: :colon, value: ":", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 26, column: 1]]
Flect.Compiler.Syntax.Token[type: :colon_colon, value: "::", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 27, column: 1]]
Flect.Compiler.Syntax.Token[type: :semicolon, value: ";", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 28, column: 1]]
Flect.Compiler.Syntax.Token[type: :assign, value: "=", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 29, column: 1]]
Flect.Compiler.Syntax.Token[type: :assign_assign, value: "==", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 30, column: 1]]
Flect.Compiler.Syntax.Token[type: :assign_assign_assign, value: "===", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 31, column: 1]]
Flect.Compiler.Syntax.Token[type: :angle_open, value: "<", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 32, column: 1]]
Flect.Compiler.Syntax.Token[type: :angle_open_angle_open, value: "<<", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 33, column: 1]]
Flect.Compiler.Syntax.Token[type: :angle_open_assign, value: "<=", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 34, column: 1]]
Flect.Compiler.Syntax.Token[type: :angle_open_pipe, value: "<|", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 35, column: 1]]
Flect.Compiler.Syntax.Token[type: :angle_close, value: ">", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 36, column: 1]]
Flect.Compiler.Syntax.Token[type: :angle_close_angle_close, value: ">>", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 37, column: 1]]
Flect.Compiler.Syntax.Token[type: :angle_close_assign, value: ">=", location: Flect.Compiler.Syntax.Location[file: "ops_seps.fl", line: 38, column: 1]]
