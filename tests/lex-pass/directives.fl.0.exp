Flect.Compiler.Syntax.Token[type: :directive, value: "\\if", location: Flect.Compiler.Syntax.Location[file: "directives.fl", line: 1, column: 1]]
Flect.Compiler.Syntax.Token[type: :directive, value: "\\elif", location: Flect.Compiler.Syntax.Location[file: "directives.fl", line: 2, column: 1]]
Flect.Compiler.Syntax.Token[type: :directive, value: "\\else", location: Flect.Compiler.Syntax.Location[file: "directives.fl", line: 3, column: 1]]
Flect.Compiler.Syntax.Token[type: :directive, value: "\\endif", location: Flect.Compiler.Syntax.Location[file: "directives.fl", line: 4, column: 1]]
Flect.Compiler.Syntax.Token[type: :directive, value: "\\define", location: Flect.Compiler.Syntax.Location[file: "directives.fl", line: 5, column: 1]]
Flect.Compiler.Syntax.Token[type: :directive, value: "\\undef", location: Flect.Compiler.Syntax.Location[file: "directives.fl", line: 6, column: 1]]
Flect.Compiler.Syntax.Token[type: :directive, value: "\\note", location: Flect.Compiler.Syntax.Location[file: "directives.fl", line: 7, column: 1]]
Flect.Compiler.Syntax.Token[type: :directive, value: "\\warning", location: Flect.Compiler.Syntax.Location[file: "directives.fl", line: 8, column: 1]]
Flect.Compiler.Syntax.Token[type: :directive, value: "\\error", location: Flect.Compiler.Syntax.Location[file: "directives.fl", line: 9, column: 1]]
